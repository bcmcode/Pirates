{"version":3,"sources":["components/DeleteButton.js","components/PirateList.js","views/Crew.js","components/PirateForm.js","views/New.js","views/Pirate.js","App.js","serviceWorker.js","index.js"],"names":["DeleteButton","id","setPirates","pirates","type","onClick","e","axios","delete","then","filter","pirate","_id","catch","console","log","PirateList","map","idx","key","src","imageUrl","alt","name","style","width","navigate","Crew","useState","loaded","setLoaded","useEffect","get","res","sortedNames","data","sort","sorted","push","err","PirateForm","setName","setImageUrl","treasureChests","setTreasureChests","catchPhrase","setCatchPhrase","position","setPosition","pegLeg","setPegLeg","eyePatch","setEyePatch","hook","setHook","errors","setErrors","onSubmit","preventDefault","post","Object","values","response","field","properties","message","error","color","onChange","target","value","disabled","checked","New","Pirate","setPirate","updatePirate","put","App","className","from","to","noThrow","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f05a33ae.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nexport default function DeleteButton({ id, setPirates, pirates }) {\n\n    const walkThePlank = e => {\n        axios.delete('/api/pirates/'+id)\n            .then(() => setPirates(pirates.filter(pirate => pirate._id !== id)))\n            .catch(console.log)\n    }\n\n    return(\n        <button type=\"button\" onClick={walkThePlank}>Walk the Plank!</button>\n    )\n}","import React from 'react';\nimport DeleteButton from './DeleteButton';\nimport { navigate } from '@reach/router';\n\nexport default function PirateList({pirates, setPirates}) {\n    return(\n        <>\n            {pirates.map((pirate, idx) => {\n                return <div key={idx}>\n                    <div>\n                        <img src={pirate.imageUrl} alt={pirate.name} style={{width: \"200px\"}}/>\n                    </div>\n                    <h3>{pirate.name}</h3>\n                    <button type=\"button\" onClick={() => navigate(\"/pirate/\"+pirate._id)}>View the Pirate</button>\n                    <DeleteButton id={pirate._id} setPirates={setPirates} pirates={pirates} />\n                </div>\n            })}\n        </>\n    )\n}\n","import React, { useState, useEffect }from 'react';\nimport { navigate } from '@reach/router';\nimport PirateList from '../components/PirateList';\nimport axios from 'axios';\n\n\nexport default function Crew() {\n    const [pirates, setPirates] = useState(null);\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        axios.get('/api/pirates')\n            .then(res => {\n                const sortedNames = res.data.map(pirate => pirate.name).sort();\n                const sorted = [];\n                const pirates = res.data;\n                for(const name of sortedNames){\n                    for(const pirate of pirates){\n                        if(pirate.name === name) {\n                            sorted.push(pirate);\n                            break;\n                        }\n                    }\n                }\n                setPirates(sorted);\n                setLoaded(true);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    return(\n        <div>\n            <div>\n                <h1>Pirate Crew</h1>\n                <button type=\"button\" onClick={()=>navigate(\"/pirate/new\")}>Add Pirate</button>\n            </div>\n            {loaded && <PirateList pirates={pirates} setPirates={setPirates}/>}\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nexport default function PirateForm() {\n    const [name, setName] = useState('');\n    const [imageUrl, setImageUrl] = useState('');\n    const [treasureChests, setTreasureChests] = useState('');\n    const [catchPhrase, setCatchPhrase] = useState('');\n    const [position, setPosition] = useState('');\n    const [pegLeg, setPegLeg] = useState(true);\n    const [eyePatch, setEyePatch] = useState(true);\n    const [hook, setHook] = useState(true);\n    const [errors, setErrors] = useState([]);\n\n    const createPirate = e => {\n        e.preventDefault();\n        axios.post('/api/pirates', {\n            name,\n            imageUrl,\n            treasureChests,\n            catchPhrase,\n            position,\n            pegLeg,\n            eyePatch,\n            hook\n        })\n            .then(()=>navigate('/pirates'))\n            .catch(err =>{\n                setErrors(Object.values(err.response.data.errors).map(field => field.properties.message));\n            });\n    }\n\n    return(\n        <form onSubmit={createPirate}>\n            {errors.map((error, idx) => <p style={{color: \"red\"}} key={idx}>{error}</p>)}\n            <div>\n                <label>Name:</label>\n                <input type=\"text\" onChange={e => setName(e.target.value)} value={name} />\n            </div>\n            <div>\n                <label>Image URL:</label>\n                <input type=\"text\" onChange={e => setImageUrl(e.target.value)} value={imageUrl} />\n            </div>\n            <div>\n                <label>Treasure Chests:</label>\n                <input type=\"number\" onChange={e => setTreasureChests(e.target.value)} value={treasureChests} />\n            </div>\n            <div>\n                <label>Catch Phrase:</label>\n                <input type=\"text\" onChange={e => setCatchPhrase(e.target.value)} value={catchPhrase} />\n            </div>\n            <div>\n                <label>Position:</label>\n                <select name=\"position\" id=\"position\" onChange={e => setPosition(e.target.value)} value={position}>\n                    <option value=\"\" disabled>Select a Postion</option>\n                    <option value=\"Captain\">Captain</option>\n                    <option value=\"First Mate\">First Mate</option>\n                    <option value=\"Quarter Master\">Quarter Master</option>\n                    <option value=\"Boatswain\">Boatswain</option>\n                    <option value=\"Powder Monkey\">Powder Monkey</option>\n                </select>\n            </div>\n            <div>\n                <label>Peg Leg:</label>\n                <input type=\"checkbox\" onChange={e => setPegLeg(e.target.checked)} checked={pegLeg} />\n            </div>\n            <div>\n                <label>Eye Patch:</label>\n                <input type=\"checkbox\" onChange={e => setEyePatch(e.target.checked)} checked={eyePatch} />\n            </div>\n            <div>\n                <label>Hook Hand:</label>\n                <input type=\"checkbox\" onChange={e => setHook(e.target.checked)} checked={hook} />\n            </div>\n            <button type=\"submit\" >Submit</button>\n        </form>\n    )\n}","import React from 'react';\nimport PirateForm from '../components/PirateForm';\nimport { navigate } from '@reach/router';\n\nexport default function New() {\n    return(\n        <div>\n            <h1>Add a Pirate</h1>\n            <button onClick={() => navigate('/pirates')}>Back to the Crew!</button>\n            <PirateForm />\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nexport default function Pirate({ id }) {\n\n    const [pirate, setPirate] = useState('');\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        axios.get('/api/pirates/'+id)\n            .then(res => {\n                setPirate(res.data);\n                setLoaded(true);\n            })\n            .catch(err => console.log(err));\n    }, [id])\n\n    const updatePirate = field => {\n        axios.put('/api/pirates/'+id, {[field]: !pirate[field]})\n            .then(res => setPirate(res.data))\n            .catch(console.log);\n    }\n\n    if(!loaded) return \"Loading ...\";\n\n    return(\n        <div>\n            <h1>{pirate.name}</h1>\n            <button type=\"button\" onClick={() => navigate(\"/pirates\")}>Back to the Crew!</button>\n            <div>\n                <img src={pirate.imageUrl} alt={pirate.name} style={{width: \"400px\"}}/>\n                <h3>\"{pirate.catchPhrase}\"</h3>\n            </div>\n            <div>\n                <h3>About</h3>\n                <p>Positon: {pirate.position}</p>\n                <p>Treasure Chests: {pirate.treasureChests}</p>\n                <p>Peg Leg: {pirate.pegLeg ? \"Yarrr\" : \"No matey\" }\n                    <input type=\"checkbox\" checked={pirate.pegLeg} onChange={() => updatePirate(\"pegLeg\") }/>\n                </p>\n                <p>Eye Patch: {pirate.eyePatch ? \"Yarrr\" : \"No matey\" }\n                    <input type=\"checkbox\" checked={pirate.eyePatch} onChange={() => updatePirate(\"eyePatch\") }/>\n                </p>\n                <p>Hook Hand: {pirate.hook ? \"Yarrr\" : \"No matey\" }\n                    <input type=\"checkbox\" checked={pirate.hook} onChange={() => updatePirate(\"hook\") }/>\n                </p>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { Router, Redirect} from '@reach/router';\nimport Crew from './views/Crew';\nimport New from './views/New';\nimport Pirate from './views/Pirate';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Redirect from=\"/\" to=\"/pirates\" noThrow/>\n        <Crew path=\"/pirates\" />\n        <New path=\"/pirate/new\" />\n        <Pirate path=\"/pirate/:id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}